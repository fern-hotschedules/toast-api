imports:
  commons: commons.yml
service:
  auth: false
  base-path: /menuItems
  endpoints:
    menuItemsGuidGet:
      path: /{guid}
      method: GET
      docs: |
        Returns a `MenuItem`
        object containing information about an item or modifier available from a
        restaurant.
      display-name: |
        Get a menu item or modifier
      path-parameters:
        guid:
          docs: The Toast POS GUID for the menu item.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast POS GUID of the restaurant that the configuration
              applies to.
            type: string
        name: |-
          menu-item-or-modifier
          -request
      response: MenuItem
    menuItemsGet:
      path: ""
      method: GET
      docs: |
        Returns an array of `MenuItem` objects containing
        information about the items and modifiers available from a
        restaurant. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      display-name: |
        Get menu items and modifiers
      request:
        query-parameters:
          pageToken:
            docs: >
              A string that identifies the set of data objects that the  endpoint will
              return in its response data. You can use this  parameter to
              retrieve one page of response data. You  get the value that you
              supply in the `pageToken` parameter  from the
              `Toast-Next-Page-Token` header field value of a  previous request
              to the endpoint. For more information, see  <a
              href="https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html">Paginating
              response data</a>.
            type: optional<string>
          pageSize:
            docs: >
              The number of objects to return in the array. Deprecated. For more
              information, see  <a
              href="https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html">Paginating
              response data</a>.
            type: optional<integer>
          page:
            docs: >
              The sequence number of the first object to return in the array.
              Deprecated. For more information, see  <a
              href="https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html">Paginating
              response data</a>.
            type: optional<integer>
          lastModified:
            docs: |
              Limits the return data to objects created or modified after
              a specific date and time. For example:
              `2015-12-01T00:00:00.000+0000`.
            type: optional<string>
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast POS GUID of the restaurant that the configuration
              applies to.
            type: string
        name: |-
          menu-items-and-modifiers
          -request
      response: list<MenuItem>
types:
  MenuItem:
    extends:
      - commons.ExternalReference
      - MenuItem_allOf
  MenuItem_allOf:
    properties:
      name:
        docs: |
          The name of the menu item as it appears in the Toast POS.
        type: optional<string>
      calories:
        docs: |
          The amount of food energy in the item, expressed in
          Calorie units. Values can be positive, negative, or zero.
        type: optional<integer>
      sku:
        docs: The stock keeping unit (SKU) code for the item.
        type: optional<string>
      plu:
        docs: The price look up (PLU) code for the item.
        type: optional<string>
      orderableOnline:
        docs: >
          Deprecated. Indicates whether restaurant guests can order from the menu
          online. Toast is streamlining and improving the set of configuration
          options that restaurants use for configuring whether a menu entity can
          be ordered online. As part of this change, the `orderableOnline` value
          has been deprecated. Before 2020-05-25, you should transition to using
          the `visibility` array that the menus API returns for each menu
          entity, instead of this `orderableOnline` value, to determine if the
          entity should be available for online ordering. See <a
          href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
          entity visibility enhancements (rolled out)</a> for more information.
        type: optional<string>
      visibility:
        docs: >
          Deprecated. Indicates where the menu is displayed and who can see it. *
          ALL: Visible to everyone (servers and customers) * POS_ONLY: Only
          visible to servers * NONE: Hidden from everyone Toast is streamlining
          and improving the set of configuration options that restaurants use
          for configuring where a menu entity is visible (for example, on a
          Toast POS device or on a restaurant's Toast online ordering website).
          As part of this change, the `visibility` value in the configuration
          API has been deprecated. Before 2020-05-25, you should transition to
          using the `visibility` array that the menus API returns for each menu
          entity, instead of this `visibility` value, to determine where the
          entity should be visible. See <a
          href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
          entity visibility enhancements (rolled out)</a> for more information.
        type: optional<InlinedType6>
      type:
        docs: >
          Specifies whether this item is a special request or other off-menu
          transaction. * `NONE` - a normal menu item or modifier. * `OPENITEM` -
          an item that is not on a menu. * `SPECIAL_REQUEST` - a selection that
          is not an item. * `PORTION` - a division of a menu item used to apply
          modifiers separately to separate parts of an item. For example, one
          half of a pizza.
        type: optional<InlinedType7>
      optionGroups:
        docs: |
          An array of `ExternalReference` objects containing the
          identifiers of the `MenuOptionGroup`s
          that contain modifiers applicable to this item. Does not
          include those inherited from the parent `MenuGroup`.
        type: optional<list<commons.ExternalReference>>
      inheritOptionGroups:
        docs: |
          True if this menu item inherits `MenuOptionGroup`s
          from its parent `MenuGroup`.
        type: optional<boolean>
      images:
        docs: |
          An array of `Image`
          objects that are associated with the `MenuItem`.
        type: optional<list<commons.Image>>
      unitOfMeasure:
        docs: |
          The unit of measure used to determine the price of the item.
          The default is NONE.
          This value is not relevant if `inheritUnitOfMeasure` is true.
        type: optional<InlinedType8>
      inheritUnitOfMeasure:
        docs: |
          True if this menu item inherits its unit of measure
          from its parent `MenuGroup`.
        type: optional<boolean>
  InlinedType6:
    docs: >
      Deprecated. Indicates where the menu is displayed and who can see it. *
      ALL: Visible to everyone (servers and customers) * POS_ONLY: Only visible
      to servers * NONE: Hidden from everyone Toast is streamlining and
      improving the set of configuration options that restaurants use for
      configuring where a menu entity is visible (for example, on a Toast POS
      device or on a restaurant's Toast online ordering website). As part of
      this change, the `visibility` value in the configuration API has been
      deprecated. Before 2020-05-25, you should transition to using the
      `visibility` array that the menus API returns for each menu entity,
      instead of this `visibility` value, to determine where the entity should
      be visible. See <a
      href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
      entity visibility enhancements (rolled out)</a> for more information.
    enum:
      - ALL
      - POS_ONLY
      - NONE
  InlinedType7:
    docs: >
      Specifies whether this item is a special request or other off-menu
      transaction. * `NONE` - a normal menu item or modifier. * `OPENITEM` - an
      item that is not on a menu. * `SPECIAL_REQUEST` - a selection that is not
      an item. * `PORTION` - a division of a menu item used to apply modifiers
      separately to separate parts of an item. For example, one half of a pizza.
    enum:
      - NONE
      - OPENITEM
      - SPECIAL_REQUEST
      - PORTION
  InlinedType8:
    docs: |
      The unit of measure used to determine the price of the item.
      The default is NONE.
      This value is not relevant if `inheritUnitOfMeasure` is true.
    enum:
      - NONE
      - LB
      - OZ
      - KG
      - G
