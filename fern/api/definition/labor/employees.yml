imports:
  commons: commons.yml
service:
  auth: false
  base-path: /employees
  endpoints:
    employeesGet:
      path: ""
      method: GET
      docs: |
        Returns an array of `Employee` objects containing information 
        about restaurant employees.
      display-name: Get employees
      request:
        query-parameters:
          employeeIds:
            docs: |
              An optional identifier that filters return values for a 
              specific employee. The identifier can be a Toast platform 
              GUID or an external identifier. If present, the `employees` 
              resource will only return the employees you specify. You 
              can include multiple `employeeIds` query parameters 
              (maximum 100). If not present, the resource returns each 
              employee for the restaurant.
            type: optional<string>
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
        name: employees-request
      response: list<Employee>
    employeesPost:
      path: ""
      method: POST
      docs: |
        Creates a restaurant employee record.
      display-name: Add an employee
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: employee-request
      response: Employee
    employeesEmployeeIdGet:
      path: /{employeeId}
      method: GET
      docs: |
        Returns an `Employee` object containing information about one 
        restaurant employee.
      display-name: Get information about one employee
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID or external identifier for the 
            employee to be returned.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
        name: information-about-one-employee-request
      response: Employee
    employeesEmployeeIdDelete:
      path: /{employeeId}
      method: DELETE
      docs: |
        Deletes a restaurant employee record by marking the record as 
        deleted. A deleted employee cannot log in at the restaurant or 
        open new time entries.
        If you `GET` an employee record that has been deleted, its 
        `deleted` value is `true` and its `deletedDate` value contains 
        the date and time the record was deleted. If you `GET` all 
        employees for a restaurant, the GUIDs for deleted employees are 
        not included in the return data.
        If you delete an employee that has already been deleted then 
        the result is successful (200) and no change is made.
        The deleted record appears in the list of deleted employees for 
        the restaurant in the Toast administration back-end. From the 
        list of deleted employees, you can enable a deleted record so 
        that the employee can use it again. You cannot enable a deleted 
        employee using the labor API. Information about deleted 
        employees remains available in reports.
        You cannot delete employees who have open time entries (time 
        entries that do not have an out date value).
      display-name: Delete an employee
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID or external identifier for the 
            employee to be deleted.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
        name: delete-employee-request
      response: Employee
    employeesEmployeeIdPatch:
      path: /{employeeId}
      method: PATCH
      docs: >
        Updates the first name, chosen name, last name, external employee ID,
        and/or  passcode of a restaurant employee. The `PATCH` operation
        cannot  update any other employee information.
      display-name: Update employee information
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID or external identifier for the 
            employee to be returned.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: employee-information-request
      response: Employee
    employeesEmployeeIdExternalIdPut:
      path: /{employeeId}/externalId
      method: PUT
      docs: |
        Adds or replaces the external identifier for an
        existing employee. Include the string value of the new external
        identifier in the message body.
        The Toast platform uses this external identifier as one of the 
        unique, persistent identifiers for an employee record. 
        _Changing the external identifier for an existing employee 
        might affect reporting and other Toast platform functions that 
        select employees using the `externalId` value._
      display-name: Add or replace an external identifier
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID of the employee record.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: replace-an-external-identifier-request
      response: Employee
    employeesEmployeeIdExternalIdPost:
      path: /{employeeId}/externalId
      method: POST
      docs: |
        Adds an external identifier for an existing employee. Include 
        the string value of the new external identifier in the message 
        body.
        You cannot change an existing external identifier with another 
        `POST` request; use `PUT` instead. The Toast platform uses this 
        external identifier as one of the unique, persistent 
        identifiers for an employee record.
      display-name: Add an external identifier
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID of the employee record.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: external-identifier-request
      response: Employee
    employeesEmployeeIdJobsPut:
      path: /{employeeId}/jobs
      method: PUT
      docs: |
        Replaces the list of jobs for an employee. Include a JSON  
        array of job identifiers in the message body.
        If a job is defined at the restaurant group or subgroup level, 
        this operation adds or removes that job for the the employee at 
        _all restaurant locations_ in the group or subgroup.
      display-name: Replace a jobs list
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID of the employee record.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: a-jobs-list-request
      response: Employee
    employeesEmployeeIdWageOverridesPut:
      path: /{employeeId}/wageOverrides
      method: PUT
      docs: |
        Replaces the list of wage overrides for the jobs that are 
        assigned to an employee. Include a JSON  array of 
        `JobWageOverride` objects in the message body. Include the new 
        wage for the employee in the `wage` value. Specify the wage in 
        U.S. dollars.
        You must include all existing wage overrides in the message 
        body. Any wage overrides that are not present in the array are 
        removed from the employee record.
      display-name: Replace wage overrides
      path-parameters:
        employeeId:
          docs: |
            The Toast platform GUID of the employee record.
          type: string
      request:
        headers:
          Toast-Restaurant-External-ID:
            docs: |
              The Toast platform GUID of the restaurant that is the 
              context for this operation.
            type: string
          Content-Type:
            docs: |
              The Internet Assigned Numbers Authority (IANA) media type 
              of the message body data. The value must be 
              `application/json`.
            type: string
        body: 
          type: string
        name: wage-overrides-request
      response: Employee
types:
  Employee:
    docs: A restaurant employee
    extends:
      - commons.ExternalReference
      - Employee_allOf
  Employee_allOf:
    properties:
      createdDate:
        docs: |
          Date created, in UTC format (read-only).
        type: optional<string>
      modifiedDate:
        docs: |
          Date modified, in UTC format (read-only).
        type: optional<string>
      deletedDate:
        docs: |
          Date deleted, in UTC format (read-only).
        type: optional<string>
      firstName:
        docs: |
          Optional, first name of the employee.
        type: optional<string>
      chosenName:
        docs: >
          Optional, chosen name of the employee. To be used, when appropriate, in
          place of first name.
        type: optional<string>
      lastName:
        docs: |
          Optional, last name of the employee.
        type: optional<string>
      email:
        docs: |
          Employee's email address.
        type: optional<string>
      phoneNumber:
        docs: |
          Employee's phone number
        type: optional<string>
      passcode:
        docs: |
          An optional numeric security code that a new employee can 
          use to begin a session in a Toast POS device. The 
          passcode value can only occur in `POST` requests. The 
          value must be numeric and it must contain at least one 
          and no more than eight digits. The employee can only use 
          the passcode at the restaurant specified in the `POST` 
          request.   The response to a successful `POST` request 
          will include the passcode value in clear text. A `GET` 
          request for the employee will not return the passcode.
        type: optional<string>
      externalEmployeeId:
        docs: |
          Optional, employee’s external ID in the Toast platform.
        type: optional<string>
      deleted:
        docs: |
          If the employee is deleted in the Toast platform.
        type: optional<boolean>
      disabled:
        docs: |
          An employee's Toast platform account may be disabled if 
          that employee is suspected of fraud or other behavior 
          against the terms of service. If `true`, no shifts should 
          be scheduled for this employee.
        type: optional<boolean>
      jobReferences:
        docs: |
          An array of external references to jobs assigned to this 
          employee.
        type: optional<list<commons.ExternalReference>>
      wageOverrides:
        docs: |
          An optional array of per job wage overrides, where each 
          element defines a job reference and the wage override for 
          this employee when performing that job.
        type: optional<list<JobWageOverride>>
      v2EmployeeGuid:
        docs: |
          This value is included for future use. An alternate Toast 
          platform GUID for the employee that will be used in 
          upcoming labor API functionality.
        type: optional<string>
  JobWageOverride:
    docs: |
      The overriding job wage, for an employee that has a wage that 
      differs from the job's default wage.
    properties:
      wage:
        docs: |
          Required currency value of the employee's overriding job wage.
        type: double
      jobReference: commons.ExternalReference
