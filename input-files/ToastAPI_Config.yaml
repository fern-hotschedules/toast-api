openapi: 3.0.1
info:
  contact:
    name: Toast developer support
  description: "Returns information about the configuration of a restaurant and \nits menus, such as menu items and alternate payment types, as \nwell as physical configuration such as cash drawers and \nrestaurant tables.\n\nThe configuration API does not return information about entities that you have \nremoved from your restaurant configuration or archived.\n"
  title: Configuration API
  version: 2.2.0
servers:
  - url: https://ws-api.toasttab.com/config/v2
  - url: https://ws-sandbox-api.eng.toasttab.com/config/v2
tags:
  - name: Alternate Payment Types
  - name: Break Types
  - name: Cash Drawers
  - name: Dining Options
  - name: Discounts
  - name: Menu Groups
  - name: Menu Items
  - name: Modifier Groups
  - name: Menus
  - name: No Sale Reasons
  - name: Payout Reasons
  - name: Pre Modifier Groups
  - name: Pre Modifiers
  - name: Price Groups
  - name: Printers
  - name: Restaurant Services
  - name: Revenue Centers
  - name: Sales Categories
  - name: Service Areas
  - name: Service Charges
  - name: Tables
  - name: Tax Rates
  - name: Tip Withholding
  - name: Void Reasons
paths:
  /alternatePaymentTypes/{guid}:
    get:
      description: |
        Returns an `AlternatePaymentType`
        object containing information about an alternative form of payment
        configured for a restaurant. Alternate payment types are forms
        of payment that are not standard in the Toast POS and that are
        configured for a particular restaurant. For example, a
        third-party service that processes payments might be configured
        as an alternate payment type.
      operationId: alternatePaymentTypesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the alternate payment
            type is configured for.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the alternative form of payment.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlternatePaymentType'
          description: Returns an `AlternatePaymentType` object.
      summary: |
        Get an alternative payment type
      tags:
        - Alternate Payment Types
  /alternatePaymentTypes:
    get:
      description: |
        Returns an array of `AlternatePaymentType`
        objects containing information about alternative forms of
        payment that are configured for a restaurant. Alternate
        payment types are forms of payment that are not standard in the
        Toast POS and that are configured for a particular restaurant.
        For example, a third-party service that processes payments
        might be configured as an alternate payment type. If a
        `lastModified` date is specified, returns all objects that were
        created or modified after that date.
      operationId: alternatePaymentTypesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlternatePaymentType'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `AlternatePaymentType` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get alternative payment types
      tags:
        - Alternate Payment Types
  /breakTypes/{guid}:
    get:
      description: "Returns a `BreakType`\nobject containing information about a break type configured for \na restaurant.\n"
      operationId: breakTypesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the break is configured for.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the break config.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BreakType'
          description: Returns a `BreakType` object.
      summary: |
        Get a break type
      tags:
        - Break Types
  /breakTypes:
    get:
      description: |
        Returns an array of `BreakType`
        objects containing information about breaks configured for a
        restaurant. If a `lastModified` date is specified, returns
        all objects that were created or modified after that date.
      operationId: breakTypesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BreakType'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `BreakType` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get break types
      tags:
        - Break Types
  /cashDrawers/{guid}:
    get:
      description: |
        Returns a `CashDrawer`
        object containing information about a specific cash drawer
        device.
      operationId: cashDrawersGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the cash drawer.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashDrawer'
          description: Returns a `CashDrawer` object.
      summary: |
        Get a cash drawer
      tags:
        - Cash Drawers
  /cashDrawers:
    get:
      description: |
        Returns an array of `CashDrawer` objects
        containing information about the cash drawer devices for the
        restaurant. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: cashDrawersGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CashDrawer'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `CashDrawer` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get cash drawers
      tags:
        - Cash Drawers
  /diningOptions/{guid}:
    get:
      description: |
        Returns a `DiningOption` object
        containing information about a type of service offered by a
        restaurant. For example, dine in, take out, and delivery might
        be dining options for a restaurant.
      operationId: diningOptionsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the dining option.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiningOption'
          description: Returns a `DiningOption` object.
      summary: |
        Get a dining option
      tags:
        - Dining Options
  /diningOptions:
    get:
      description: |
        Returns an array of `DiningOption` objects
        containing information about types of service offered by a
        restaurant. For example, dine in, take out, and delivery might
        be dining options for a restaurant. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: diningOptionsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DiningOption'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `DiningOption` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get dining options
      tags:
        - Dining Options
  /discounts/{guid}:
    get:
      description: |
        Returns a `Discount`
        object containing information about a price deduction
        configured for a restaurant.
      operationId: discountsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the discount.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: Returns a `Discount` object.
      summary: |
        Get a discount
      tags:
        - Discounts
  /discounts:
    get:
      description: |
        Returns an array of `Discount` objects containing
        information about the price deductions configured for a
        restaurant. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: discountsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Discount'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `Discount` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get discounts
      tags:
        - Discounts
  /menuGroups/{guid}:
    get:
      description: |
        Returns a `MenuGroup`
        object containing information about a section within a menu.
      operationId: menuGroupsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the menu group.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuGroup'
          description: Returns a `MenuGroup` object.
      summary: |
        Get a menu group
      tags:
        - Menu Groups
  /menuGroups:
    get:
      description: |
        Returns an array of `MenuGroup` objects
        containing information about the subsections of the menus
        configured for a restaurant. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: menuGroupsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuGroup'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `MenuGroup` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get menu groups
      tags:
        - Menu Groups
  /menuItems/{guid}:
    get:
      description: |
        Returns a `MenuItem`
        object containing information about an item or modifier available from a
        restaurant.
      operationId: menuItemsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID for the menu item.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: Returns a `MenuItem` object.
      summary: |
        Get a menu item or modifier
      tags:
        - Menu Items
  /menuItems:
    get:
      description: |
        Returns an array of `MenuItem` objects containing
        information about the items and modifiers available from a
        restaurant. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: menuItemsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuItem'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `MenuItem` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get menu items and modifiers
      tags:
        - Menu Items
  /menuOptionGroups/{guid}:
    get:
      description: |
        Returns a `MenuOptionGroup`
        object containing information about a modifier group. For
        example, salad dressings might be a modifier group for a
        salad menu item.
      operationId: menuOptionGroupsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the modifier group.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuOptionGroup'
          description: Returns a `MenuOptionGroup` object.
      summary: |
        Get a modifier group
      tags:
        - Modifier Groups
  /menuOptionGroups:
    get:
      description: "Returns an array of `MenuOptionGroup`\nobjects containing information about modifier groups. \nFor example, salad dressings might be a modifier group\nfor a salad menu item. If a `lastModified` date is\nspecified, returns all objects that were created or modified\nafter that date.\n"
      operationId: menuOptionGroupsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuOptionGroup'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `MenuOptionGroup` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get modifier groups
      tags:
        - Modifier Groups
  /menus/{guid}:
    get:
      description: |
        Returns a `Menu` object
        containing information about a menu configured for a
        restaurant. For example, a restaurant might have drinks,
        dinner, and dessert menus.
      operationId: menusGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the menu.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: Returns a `Menu` object.
      summary: |
        Get a menu
      tags:
        - Menus
  /menus:
    get:
      description: |
        Returns an array of `Menu`
        objects containing information about menus configured for a
        restaurant. For example, a restaurant might have drinks,
        dinner, and dessert menus. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: menusGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Menu'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `Menu` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get menus
      tags:
        - Menus
  /preModifiers/{guid}:
    get:
      description: |
        Returns a `PreModifier` object
        containing information about a pre modifier.
      operationId: preModifiersGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the pre modifier.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreModifier'
          description: Returns a `PreModifier` object.
      summary: |
        Get a pre modifier
      tags:
        - Pre Modifiers
  /preModifiers:
    get:
      description: |
        Returns an array of `PreModifier` objects
        containing information about PreModifiers configured
        for a restaurant.
      operationId: preModifiersGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PreModifier'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `PreModifier` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get pre-modifiers
      tags:
        - Pre Modifiers
  /preModifierGroups/{guid}:
    get:
      description: |
        Returns a `PreModifierGroup` object
        containing information about a pre modifier group.
      operationId: preModifierGroupsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the pre-modifier.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreModifierGroup'
          description: Returns a `PreModifierGroup` object.
      summary: |
        Get a pre-modifier group
      tags:
        - Pre Modifier Groups
  /preModifierGroups:
    get:
      description: |
        Returns an array of `PreModifierGroup` objects
        containing information about PreModifierGroup configured
        for a restaurant.
      operationId: preModifierGroupsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PreModifierGroup'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `PreModifierGroup` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get pre modifier groups
      tags:
        - Pre Modifier Groups
  /noSaleReasons/{guid}:
    get:
      description: |
        Returns a `NoSaleReason` object
        containing information about a no sale reason.
      operationId: noSaleReasonsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the no sale reason.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoSaleReason'
          description: Returns a `NoSaleReason` object.
      summary: |
        Get a no sale reason
      tags:
        - No Sale Reasons
  /noSaleReasons:
    get:
      description: |
        Returns an array of `NoSaleReason` objects
        containing information about no sale reasons configured
        for a restaurant.
      operationId: noSaleReasonsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NoSaleReason'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `NoSaleReason` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get no sale reasons
      tags:
        - No Sale Reasons
  /payoutReasons/{guid}:
    get:
      description: |
        Returns a `PayoutReason` object
        containing information about a recurring restaurant expense
        that is paid in cash. Payout reasons are pre-configured for a
        restaurant.
      operationId: payoutReasonsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the payout reason.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutReason'
          description: Returns a `PayoutReason` object.
      summary: |
        Get a payout reason
      tags:
        - Payout Reasons
  /payoutReasons:
    get:
      description: |
        Returns an array of `PayoutReason` objects
        containing information about recurring cash expenses configured
        for a restaurant. For example, payment for services such as
        window washing might be payout reasons. If a `lastModified`
        date is specified, returns all objects that were created or
        modified after that date.
      operationId: payoutReasonsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PayoutReason'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `PayoutReason` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get payout reasons
      tags:
        - Payout Reasons
  /priceGroups/{guid}:
    get:
      description: |
        Returns a `PriceGroup` object
        containing information about a variable price level configured for
        items at a restaurant.
      operationId: priceGroupsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the price level.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceGroup'
          description: Returns a `PriceGroup` object.
      summary: |
        Get a price level for menu items
      tags:
        - Price Groups
  /priceGroups:
    get:
      description: |
        Returns an array of `PriceGroup` objects
        containing information about the variable price levels
        configured for items at a restaurant. If a `lastModified` date
        is specified, returns all objects that were created or modified
        after that date.
      operationId: priceGroupsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PriceGroup'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `PriceGroup` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get price levels for menu items
      tags:
        - Price Groups
  /printers/{guid}:
    get:
      description: |
        Returns a `Printer` object
        containing information about a printer device configured for a
        restaurant.
      operationId: printersGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the printer.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Printer'
          description: Returns a `Printer` object.
      summary: |
        Get a printer
      tags:
        - Printers
  /printers:
    get:
      description: |
        Returns an array of `Printer` objects containing
        information about the printer devices configured for a
        restaurant. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: printersGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Printer'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `Printer` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get printers
      tags:
        - Printers
  /salesCategories/{guid}:
    get:
      description: |
        Returns a `SalesCategory` object
        containing information about a type of menu item used to
        analyze purchases at a restaurant. For example, food and
        alcohol might be sales categories for a restaurant.
      operationId: salesCategoriesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the sales category.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesCategory'
          description: Returns a `SalesCategory` object.
      summary: |
        Get a menu item sales category
      tags:
        - Sales Categories
  /salesCategories:
    get:
      description: |
        Returns an array of `SalesCategory` objects
        containing information about the types of menu item used to
        analyze purchases at a restaurant. For example, food and
        alcohol might be sales categories for a restaurant. If a
        `lastModified` date is specified, returns all objects that were
        created or modified after that date.
      operationId: salesCategoriesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesCategory'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `SalesCategory` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get menu item sales categories
      tags:
        - Sales Categories
  /serviceAreas/{guid}:
    get:
      description: |
        Returns a `ServiceArea`
        object containing information about a physical setting that a
        restaurant serves customers in. For example, a restaurant might
        serve customers in dining room and patio service areas.
      operationId: serviceAreasGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the service area.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceArea'
          description: Returns a `ServiceArea` object.
      summary: |
        Get a service area
      tags:
        - Service Areas
  /serviceAreas:
    get:
      description: |
        Returns an array of `ServiceArea` objects
        containing information about the physical settings that a
        restaurant serves customers in. For example, a restaurant might
        serve customers in dining room and patio service areas. If a
        `lastModified` date is specified, returns all objects that were
        created or modified after that date.
      operationId: serviceAreasGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceArea'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `ServiceArea` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get service areas
      tags:
        - Service Areas
  /serviceCharges/{guid}:
    get:
      description: |
        Returns a `ServiceCharge` object
        containing information about a type of fee applied to
        restaurant sales. For example, an automatic gratuity applied to
        the check for a large dining party might be a type of service
        charge for a restaurant.
      operationId: serviceChargesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the service charge.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCharge'
          description: Returns a `ServiceCharge` object.
      summary: |
        Get a service charge type
      tags:
        - Service Charges
  /serviceCharges:
    get:
      description: |
        Returns an array of `ServiceCharge` objects
        containing information about the types of fee applied to
        restaurant sales. For example, an automatic gratuity applied to
        the check for a large dining party might be a type of service
        charge for a restaurant. If a `lastModified` date is specified,
        returns all objects that were created or modified after that
        date.
      operationId: serviceChargesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceCharge'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `ServiceCharge` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get service charges
      tags:
        - Service Charges
  /revenueCenters/{guid}:
    get:
      description: |
        Returns a `RevenueCenter` object
        containing information about a segment of restaurant income,
        for reporting.
      operationId: revenueCentersGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the revenue center.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueCenter'
          description: Returns a `RevenueCenter` object.
      summary: |
        Get a revenue center
      tags:
        - Revenue Centers
  /revenueCenters:
    get:
      description: |
        Returns an array of `RevenueCenter` objects
        containing information about segments of restaurant income, for
        reporting. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: revenueCentersGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RevenueCenter'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `RevenueCenter` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get revenue centers
      tags:
        - Revenue Centers
  /restaurantServices/{guid}:
    get:
      description: |
        Returns a `RestaurantService`
        object containing information about a type of menu and dining
        offered by a restaurant. For example, a restaurant might offer
        a lunch service at some hours of the day and a dinner service
        at other hours of the day.
      operationId: restaurantServicesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the service.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantService'
          description: Returns a `RestaurantService` object.
      summary: |
        Get a restaurant service period
      tags:
        - Restaurant Services
  /restaurantServices:
    get:
      description: |
        Returns an array of `RestaurantService`
        objects containing information about the types of menu and dining
        offered by a restaurant. For example, a restaurant might offer
        a lunch service at some hours of the day and a dinner service
        at other hours of the day. If a `lastModified` date is specified, returns all
        objects that were created or modified after that date.
      operationId: restaurantServicesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RestaurantService'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `RestaurantService` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get restaurant service periods
      tags:
        - Restaurant Services
  /tables/{guid}:
    get:
      description: |
        Returns a `Table`
        object containing information about a dining table configured for a
        restaurant.
      operationId: tablesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the table.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: Returns a `Table` object.
      summary: |
        Get a table
      tags:
        - Tables
  /tables:
    get:
      description: |
        Returns an array of `Table`
        objects containing information about the dining tables
        configured for a restaurant. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: tablesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Table'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `Table` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get tables
      tags:
        - Tables
  /taxRates/{guid}:
    get:
      description: |
        Returns a `TaxRate` object
        containing information about a form of taxation applied to
        sales at a restaurant.
      operationId: taxRatesGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the tax rate.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
          description: Returns a `TaxRate` object.
      summary: |
        Get a tax rate
      tags:
        - Tax Rates
  /taxRates:
    get:
      description: |
        Returns an array of `TaxRate` objects
        containing information about the forms of taxation applied to
        sales at a restaurant. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: taxRatesGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaxRate'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `TaxRate` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get tax rates
      tags:
        - Tax Rates
  /tipWithholding:
    get:
      description: |
        Returns a `TipWithholding`
        object containing information about the way tip withholding
        is configured for a restaurant. Tip withholding is a percentage
        of employees' credit card tips that is kept by a restaurant to
        cover credit card processing fees.
      operationId: tipWithholdingGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipWithholding'
          description: Returns a `TipWithholding` object.
      summary: |
        Get the percentage withheld for credit card tips
      tags:
        - Tip Withholding
  /voidReasons/{guid}:
    get:
      description: |
        Returns a `VoidReason` object
        containing information about a cause for making a sale invalid
        configured for a restaurant.
      operationId: voidReasonsGuidGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: The Toast POS GUID of the void reason.
          in: path
          name: guid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidReason'
          description: Returns a `VoidReason` object.
      summary: |
        Get a void sale reason
      tags:
        - Void Reasons
  /voidReasons:
    get:
      description: |
        Returns an array of `VoidReason` objects
        containing information about causes for making a sale invalid
        configured for a restaurant. If a `lastModified` date is
        specified, returns all objects that were created or modified
        after that date.
      operationId: voidReasonsGet
      parameters:
        - description: |
            The Toast POS GUID of the restaurant that the configuration
            applies to.
          in: header
          name: Toast-Restaurant-External-ID
          required: true
          schema:
            type: string
        - description: "A string that identifies the set of data objects that the \nendpoint will return in its response data. You can use this \nparameter to retrieve one page of response data. You \nget the value that you supply in the `pageToken` parameter \nfrom the `Toast-Next-Page-Token` header field value of a \nprevious request to the endpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The number of objects to return in the array.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: pageSize
          schema:
            type: integer
        - description: "The sequence number of the first object to return in the\narray.\n\nDeprecated. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n"
          in: query
          name: page
          schema:
            type: integer
        - description: |
            Limits the return data to objects created or modified after
            a specific date and time. For example:
            `2015-12-01T00:00:00.000+0000`.
          in: query
          name: lastModified
          schema:
            format: date
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VoidReason'
                maxItems: 300
                minItems: 0
                title: Response
                type: array
          description: Returns an array of `VoidReason` objects.
          headers:
            Toast-Next-Page-Token:
              description: "A string that identifies the following set of objects \nthat the endpoint will return. You can use this value \nto retrieve that page of response data. To return \nthe next page of objects you supply this value in the \n`pageToken` parameter of the next request to the \nendpoint. For more information, see \n<a href=\"https://doc.toasttab.com/doc/devguide/apiResponseDataPagination.html\">Paginating response data</a>.\n\nThe endpoint does not return the \n`Toast-Next-Page-Token` field if there is no following \npage of response data objects. For example, the \nendpoint will not return a `Toast-Next-Page-Token` \nheader field if all the data objects fit in one \nresponse or if you have reached the last page of \nresponse objects.\n"
              schema:
                type: string
      summary: |
        Get void sale reasons
      tags:
        - Void Reasons
components:
  schemas:
    AlternatePaymentType:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/AlternatePaymentType_allOf'
    BreakType:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/BreakType_allOf'
    CashDrawer:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/CashDrawer_allOf'
    DiningOption:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/DiningOption_allOf'
    Discount:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/Discount_allOf'
    Menu:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/Menu_allOf'
    MenuItem:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/MenuItem_allOf'
    MenuGroup:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/MenuGroup_allOf'
    MenuOptionGroup:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/MenuOptionGroup_allOf'
    PreModifier:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/PreModifier_allOf'
    PreModifierGroup:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/PreModifierGroup_allOf'
    NoSaleReason:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/NoSaleReason_allOf'
    PayoutReason:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/PayoutReason_allOf'
    PriceGroup:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/PriceGroup_allOf'
    Printer:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/Printer_allOf'
    RestaurantService:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/RestaurantService_allOf'
    RevenueCenter:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/RevenueCenter_allOf'
    SalesCategory:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/SalesCategory_allOf'
    ServiceArea:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/ServiceArea_allOf'
    ServiceCharge:
      allOf:
        - $ref: '#/components/schemas/ExternalReference'
        - $ref: '#/components/schemas/ServiceCharge_allOf'
    ServiceChargeCriteria:
      description: Describes thresholds for when a service charge should be applied to a check.
      properties:
        minCheckAmount:
          description: The service charge is only applicable if the pre-discount check is at least this amount.
          format: double
          type: number
        delivery:
          description: True if the service charge is only applicable for deliveries.
          type: boolean
        maxCheckAmount:
          description: The service charge is waived if the pre-discount check amount is more than this amount. A `null` value means this criteria is inapplicable.
          format: double
          type: number
        minDeliveryDistance:
          description: The service charge is only applicable to deliveries that are at least this distance. A `null` value means this criteria is inapplicable.
          format: double
          type: number
        takeout:
          description: Indicates whether the service charge is automatically applied to orders that have the takeout dining option behavior.
          type: boolean
        dineIn:
          description: Indicates whether the service charge is applied to orders that have the dine-in dining option behavior.
          type: boolean
      type: object
    Table:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/Table_allOf'
    TaxRate:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/TaxRate_allOf'
    ConditionalTaxRate:
      description: |
        A conditional tax rate that overrides the default `rate`
        for a `TaxRate` in
        specific situations. For example, a conditional rate
        might override the default rate when a `TaxRate` is
        applied for a specific dining option, such as takeout.
      properties:
        condition:
          description: A string describing the condition for the tax rate
          type: string
        rate:
          description: The percentage rate of the conditional tax rate
          format: double
          type: number
      type: object
    TaxTableRow:
      description: A closed sale amount range that corresponds to a specific tax amount in a tax table.
      properties:
        start:
          description: The start of a sale amount range that corresponds to a specific tax amount in a tax table.
          format: currency
          type: number
        end:
          description: The end of a sale amount range that corresponds to a specific tax amount in a tax table.
          format: currency
          type: number
        tax:
          description: The tax amount for the tax table row.
          format: currency
          type: number
        pattern:
          description: Specifies whether the price range is part of an incomplete set of ranges that establish an algorithm that you can use to calculate tax amounts.
          type: boolean
      type: object
    TipWithholding:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/TipWithholding_allOf'
      description: |
        Information about the way tip withholding is configured for
        a restaurant. Tip withholding is a percentage of employees'
        credit card tips and service charges that are paid to
        employees as a gratuity that is kept by a restaurant to
        cover credit card processing fees.
    VoidReason:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/VoidReason_allOf'
    Image:
      description: Information about an image associated with a menu or menu item.
      properties:
        url:
          description: The web address of the image.
          type: string
      type: object
    ExternalReference:
      allOf:
        - $ref: '#/components/schemas/ToastReference'
        - $ref: '#/components/schemas/ExternalReference_allOf'
    ToastReference:
      description: A wrapper object with fields that allow reference to a Toast entity by Toast GUID.
      properties:
        guid:
          description: The GUID maintained by the Toast POS.
          type: string
        entityType:
          description: The type of object this is.
          type: string
      required:
        - entityType
        - guid
      type: object
    AlternatePaymentType_allOf:
      properties:
        name:
          description: The name of the alternate payment type.
          type: string
      type: object
      example: null
    BreakType_allOf:
      properties:
        name:
          description: |
            The name of the work break type, as recognized by
            restaurant employees.
          type: string
        active:
          description: |
            Indicates whether the break is available and can be taken
            by restaurant employees.
          type: boolean
        paid:
          description: Indicates whether the break is paid.
          type: boolean
        duration:
          description: The duration of the break in minutes.
          type: integer
        enforceMinimumTime:
          description: |
            Indicates whether the duration is enforced as the minimum
            time for the break.
          type: boolean
        trackMissedBreaks:
          description: |
            True if breaks that are not taken within the specified break
            interval should be generated in Toast.
          type: boolean
        breakIntervalHrs:
          description: |
            The number of hours between break intervals. Break intervals
            are specified in hours and minutes. If missed breaks are not
            tracked, this value may be null.
          type: integer
        breakIntervalMins:
          description: |
            The number of minutes between break intervals. Break intervals
            are specified in hours and minutes. If missed breaks are not
            tracked, this value may be null.
          type: integer
        trackBreakAcknowledgement:
          description: |
            Indicates whether break acknowledgements are collected for
            this type of break. Break acknowledgements will not be
            collected if `trackMissedBreaks` is false.
          type: boolean
      type: object
      example: null
    CashDrawer_allOf:
      properties:
        printer:
          $ref: '#/components/schemas/ToastReference'
      type: object
      example: null
    DiningOption_allOf:
      properties:
        name:
          description: The name of the dining option.
          type: string
        behavior:
          description: |
            The behavior of the dining option. `TAKE_OUT` and
            `DELIVERY` require a `customer` to be specified on the
            order, and `DELIVERY` requires a `deliveryInfo` value.
          enum:
            - DINE_IN
            - TAKE_OUT
            - DELIVERY
          type: string
        curbside:
          description: |
            Indicates whether the dining option has curbside behavior, and allows the guest to
            provide identifying information such as a description of their vehicle.
          type: boolean
      type: object
      example: null
    Discount_allOf:
      description: |
        A discount configured in the Toast administration back-end.
        Discounts are always applied before taxes, but after
        service charges are calculated.
      properties:
        name:
          description: The human-readable name of the discount.
          type: string
        active:
          description: |
            Indicates whether the discount is available and can be
            applied by restaurant employees.
          type: boolean
        type:
          description: |
            * `PERCENT` - the discount reduces the price by a
            preconfigured percent.
            * `FIXED` - the discount reduces the price by a
            preconfigured currency amount.
            * `OPEN_PERCENT` - the discount reduces the price by a
            percent entered by a restaurant employee.
            * `OPEN_FIXED` - the discount reduces the price by a
            currency amount entered by a restaurant employee.
            * `BOGO` - a buy one get one (BOGO) discount.
            * `FIXED_TOTAL` - a combo discount that reduces the
            price of all eligible items to a preconfigured currency
            amount.
          enum:
            - PERCENT
            - FIXED
            - OPEN_PERCENT
            - OPEN_FIXED
            - BOGO
            - FIXED_TOTAL
          type: string
        percentage:
          description: |
            Percent discount applied when the `amountType` is
            `PERCENT`. This value will be greater than 0 and at
            most 100.
          format: double
          type: number
        amount:
          description: |
            The currency amount of the discount when the
            `amountType` is `FIXED`. This value will be greater
            than 0.
          format: double
          type: number
        selectionType:
          description: |
            * `CHECK` - the discount can be applied to a check.
            * `BOGO` - a buy one get one (BOGO) discount.
            * `ITEM` - the discount can be applied to an item
            selection in a check.
          enum:
            - CHECK
            - ITEM
            - BOGO
          type: string
        nonExclusive:
          description: |
            Indicates whether you can apply the discount with other
            discounts. This value is always `false` for item and
            combo discounts. Set this value for check and BOGO
            discounts by selecting **Allow with other discounts** in
            the **Discounts Rules** section of the discounts
            configuration page of the Toast administration
            back-end.
          type: boolean
        itemPickingPriority:
          description: |
            Indicates which menu item selections are discounted
            when you apply a BOGO discount. An item that is
            discounted by a BOGO discount is a "get" item.

            * `FIRST` - the BOGO discount applies to the first
            matching item selection in the check or the discount is
            not a BOGO discount. The `itemPickingPriority` is
            always `FIRST` for discounts that are not BOGO
            discounts.

            * `LEAST_EXPENSIVE` - the BOGO discount applies
            to the least expensive matching item selection in the check.

            * `MOST_EXPENSIVE` - the BOGO discount applies to the most
            expensive matching item selection in the check.
          enum:
            - FIRST
            - LEAST_EXPENSIVE
            - MOST_EXPENSIVE
          type: string
        fixedTotal:
          description: |
            The total price of items discounted by a combo
            discount. This value is `null` for discounts that are
            not combo discounts.
          format: double
          type: number
      type: object
      example: null
    Menu_allOf:
      properties:
        name:
          description: |
            The name of the menu as it appears in the Toast POS.
          type: string
        orderableOnline:
          description: |
            Deprecated. Indicates whether restaurant guests can order from the menu online.

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring whether a menu entity
            can be ordered online. As part of this change, the
            `orderableOnline` value has been deprecated. Before 2020-05-25,
            you should transition to using the `visibility` array that the
            menus API returns for each menu entity, instead of this
            `orderableOnline` value, to determine if the entity should be
            available for online ordering. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          type: string
        visibility:
          description: |
            Deprecated. Indicates where the menu is displayed and who can see it.
            * ALL: Visible to everyone (servers and customers)
            * POS_ONLY: Only visible to servers
            * NONE: Hidden from everyone

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring where a menu entity
            is visible (for example, on a Toast POS device or on a
            restaurant's Toast online ordering website). As part of this
            change, the `visibility` value in the configuration API has been
            deprecated. Before 2020-05-25, you should transition to using the
            `visibility` array that the menus API returns for each menu
            entity, instead of this `visibility` value, to determine where the
            entity should be visible. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          enum:
            - ALL
            - POS_ONLY
            - NONE
          type: string
        groups:
          description: |
            An array of the `MenuGroup` objects
            that are part of this menu.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        images:
          description: A collection of images associated with the menu.
          items:
            $ref: '#/components/schemas/Image'
          type: array
        unitOfMeasure:
          description: |
            The unit of measure used to determine the price of items in this menu. For example, $10.00 per gram.
          enum:
            - NONE
            - LB
            - OZ
            - KG
            - G
          type: string
      type: object
      example: null
    MenuItem_allOf:
      properties:
        name:
          description: |
            The name of the menu item as it appears in the Toast POS.
          type: string
        calories:
          description: |
            The amount of food energy in the item, expressed in
            Calorie units. Values can be positive, negative, or zero.
          type: integer
        sku:
          description: The stock keeping unit (SKU) code for the item.
          type: string
        plu:
          description: The price look up (PLU) code for the item.
          type: string
        orderableOnline:
          description: |
            Deprecated. Indicates whether restaurant guests can order from the menu online.

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring whether a menu entity
            can be ordered online. As part of this change, the
            `orderableOnline` value has been deprecated. Before 2020-05-25,
            you should transition to using the `visibility` array that the
            menus API returns for each menu entity, instead of this
            `orderableOnline` value, to determine if the entity should be
            available for online ordering. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          type: string
        visibility:
          description: |
            Deprecated. Indicates where the menu is displayed and who can see it.
            * ALL: Visible to everyone (servers and customers)
            * POS_ONLY: Only visible to servers
            * NONE: Hidden from everyone

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring where a menu entity
            is visible (for example, on a Toast POS device or on a
            restaurant's Toast online ordering website). As part of this
            change, the `visibility` value in the configuration API has been
            deprecated. Before 2020-05-25, you should transition to using the
            `visibility` array that the menus API returns for each menu
            entity, instead of this `visibility` value, to determine where the
            entity should be visible. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          enum:
            - ALL
            - POS_ONLY
            - NONE
          type: string
        type:
          description: |
            Specifies whether this item is a special request or other
            off-menu transaction.
            * `NONE` - a normal menu item or modifier.
            * `OPEN_ITEM` - an item that is not on a menu.
            * `SPECIAL_REQUEST` - a selection that is not an item.
            * `PORTION` - a division of a menu item used to apply modifiers separately to separate parts of an item. For example, one half of a pizza.
          enum:
            - NONE
            - OPEN_ITEM
            - SPECIAL_REQUEST
            - PORTION
          type: string
        optionGroups:
          description: |
            An array of `ExternalReference` objects containing the
            identifiers of the `MenuOptionGroup`s
            that contain modifiers applicable to this item. Does not
            include those inherited from the parent `MenuGroup`.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        inheritOptionGroups:
          description: |
            True if this menu item inherits `MenuOptionGroup`s
            from its parent `MenuGroup`.
          type: boolean
        images:
          description: |
            An array of `Image`
            objects that are associated with the `MenuItem`.
          items:
            $ref: '#/components/schemas/Image'
          type: array
        unitOfMeasure:
          description: |
            The unit of measure used to determine the price of the item.
            The default is NONE.
            This value is not relevant if `inheritUnitOfMeasure` is true.
          enum:
            - NONE
            - LB
            - OZ
            - KG
            - G
          type: string
        inheritUnitOfMeasure:
          description: |
            True if this menu item inherits its unit of measure
            from its parent `MenuGroup`.
          type: boolean
      type: object
      example: null
    MenuGroup_allOf:
      properties:
        name:
          description: The name of the menu group as it appears in the Toast POS.
          type: string
        menu:
          $ref: '#/components/schemas/ExternalReference'
        orderableOnline:
          description: |
            Deprecated. Indicates whether restaurant guests can order from the menu online.

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring whether a menu entity
            can be ordered online. As part of this change, the
            `orderableOnline` value has been deprecated. Before 2020-05-25,
            you should transition to using the `visibility` array that the
            menus API returns for each menu entity, instead of this
            `orderableOnline` value, to determine if the entity should be
            available for online ordering. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          type: string
        visibility:
          description: |
            Deprecated. Indicates where the menu is displayed and who can see it.
            * ALL: Visible to everyone (servers and customers)
            * POS_ONLY: Only visible to servers
            * NONE: Hidden from everyone

            Toast is streamlining and improving the set of configuration
            options that restaurants use for configuring where a menu entity
            is visible (for example, on a Toast POS device or on a
            restaurant's Toast online ordering website). As part of this
            change, the `visibility` value in the configuration API has been
            deprecated. Before 2020-05-25, you should transition to using the
            `visibility` array that the menus API returns for each menu
            entity, instead of this `visibility` value, to determine where the
            entity should be visible. See <a
            href="https://doc.toasttab.com/doc/devguide/apiDeprecatedApiFunctions.html#apiMenuEntityVisibilityEnhancements">Menu
            entity visibility enhancements (rolled out)</a> for more
            information.
          enum:
            - ALL
            - POS_ONLY
            - NONE
          type: string
        parent:
          $ref: '#/components/schemas/ExternalReference'
        items:
          description: |
            An array of `ExternalReference` objects containing the
            identifiers of the `MenuItem`s in the menu
            group.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        subgroups:
          description: |
            An array of `ExternalReference` objects containing the
            identifiers of the child `MenuGroup`s in
            the menu group. Empty if the menu group does not include any child
            menu groups.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        optionGroups:
          description: |
            An array of `ExternalReference` objects containing the
            identifiers of the child `MenuOptionGroup`s
            that contain modifiers applicable to the group, its
            subgroups and its items. Does not include
            `MenuOptionGroup`s inherited from its parent `MenuGroup`.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        inheritOptionGroups:
          description: |
            True if this `MenuGroup` inherits `MenuOptionGroup`s
            from its parent `MenuGroup`.
          type: boolean
        images:
          description: |
            An array of `Image`
            objects associated with with the `MenuGroup`.
          items:
            $ref: '#/components/schemas/Image'
          type: array
        unitOfMeasure:
          description: |
            The unit of measure used to determine the price of items in this group.
            This value is not relevant if `inheritUnitOfMeasure` is true.
          enum:
            - NONE
            - LB
            - OZ
            - KG
            - G
          type: string
        inheritUnitOfMeasure:
          description: |
            True if this `MenuGroup` inherits its unit of measure
            from its parent `MenuGroup` or (if its parent is null)
            its parent `Menu`.
          type: boolean
      type: object
      example: null
    MenuOptionGroup_allOf:
      properties:
        name:
          description: The name of the `MenuOptionGroup` as it appears in the Toast POS.
          type: string
        options:
          description: |
            An array of `ExternalReference` objects containing the
            identifiers of the `MenuItem`s in
            the menu group.
          items:
            $ref: '#/components/schemas/ExternalReference'
          minItems: 0
          type: array
        minSelections:
          description: The minimum number of selections that must be made from this option group.
          format: integer
          type: number
        maxSelections:
          description: The maximum number of selections that can be made from this option group.
          format: integer
          type: number
      type: object
      example: null
    PreModifier_allOf:
      properties:
        name:
          description: The name of the pre modifier that appears in the Toast POS.
          type: string
        scalePrice:
          description: "True if this multiplies the modifier price, false if it adds to the modifier price."
          type: boolean
        basePrice:
          description: "Amount to add to the modifier price, if scalePrice is false. Otherwise not used."
          format: double
          type: number
        scaleFactor:
          description: "Amount to multiply the modifier price, if scalePrice is true. Otherwise not used."
          format: float
          type: number
        displayMode:
          description: |
            Where this premodifier should be displayed relative to the modifier name.
            PREFIX - before the modifier name
            SUFFIX - after the modifier name
          enum:
            - PREFIX
            - SUFFIX
          type: string
        parent:
          $ref: '#/components/schemas/ToastReference'
      type: object
      example: null
    PreModifierGroup_allOf:
      properties:
        name:
          description: The name of the pre modifier that appears in the Toast POS.
          type: string
        isDefault:
          description: |
            True if this PreModifierGroup is set as the default Group.
            Only a single PreModifierGroup can be set as default at one time.
          type: boolean
      type: object
      example: null
    NoSaleReason_allOf:
      properties:
        name:
          description: The name of the no sale reason that appears in the Toast POS.
          type: string
      type: object
      example: null
    PayoutReason_allOf:
      properties:
        name:
          description: The short name of this payout reason.
          type: string
      type: object
      example: null
    PriceGroup_allOf:
      properties:
        name:
          description: The name of this price group.
          type: string
      type: object
      example: null
    Printer_allOf:
      properties:
        name:
          description: The name of this printer.
          type: string
      type: object
      example: null
    RestaurantService_allOf:
      properties:
        name:
          description: |
            The name of this meal service (for example, `Lunch` or
            `Dinner`).
          type: string
      type: object
      example: null
    RevenueCenter_allOf:
      description: "A set of ServiceAreas and POS devices for which separate revenue reports can be generated. For instance, a restaurant with a bar might choose to define two RevenueCenters, one for the bar and one for the dining area."
      properties:
        name:
          description: The name of this revenue center.
          type: string
        description:
          description: The description of this revenue center.
          type: string
      type: object
      example: null
    SalesCategory_allOf:
      description: "A set of items that will be grouped together in sales reports. SalesCategories can be applied at any level, from entire menus to individual menu items."
      properties:
        name:
          description: The name of this sales category.
          type: string
      type: object
      example: null
    ServiceArea_allOf:
      description: "A representation of a physical service area, a group of tables, in a restaurant."
      properties:
        name:
          description: The name of this service area.
          type: string
        revenueCenter:
          $ref: '#/components/schemas/ExternalReference'
      type: object
      example: null
    ServiceCharge_allOf:
      description: Any charge applied to a check for something other than menu item. Typical examples include gratuity and delivery fees.
      properties:
        name:
          description: The name of this service charge.
          type: string
        amountType:
          description: The type of service charge.
          enum:
            - FIXED
            - PERCENT
            - OPEN
          type: string
        amount:
          description: Amount in USD to be applied for `FIXED` type service charges.
          format: double
          type: number
        percent:
          description: |
            Percent fee to be applied for `PERCENT` type service
            charges, based on pre-discount check amount. Must be a
            number between 0 and 100.
          format: double
          type: number
        criteria:
          $ref: '#/components/schemas/ServiceChargeCriteria'
        gratuity:
          description: True if the service charge is a gratuity and is assigned to the owner of the check.
          type: boolean
        taxable:
          description: True if tax should be applied to the service charge.
          type: boolean
        applicableTaxes:
          description: "A reference to the taxes applied to the service charge, if the service charge is taxable."
          items:
            $ref: '#/components/schemas/TaxRate'
          type: array
        serviceChargeCalculation:
          description: Defines whether or not the service charge is applied before (PRE) or after (POST) discounts. This field is null for non-percent service charges.
          enum:
            - PRE_DISCOUNT
            - POST_DISCOUNT
          type: string
      type: object
      example: null
    Table_allOf:
      description: Represents a dining table in a restaurant.
      properties:
        name:
          description: The human-readable name of this table as it appears in the POS.
          type: string
        serviceArea:
          $ref: '#/components/schemas/ToastReference'
        revenueCenter:
          $ref: '#/components/schemas/ExternalReference'
      type: object
      example: null
    TaxRate_allOf:
      properties:
        name:
          description: The name of this tax rate.
          type: string
        isDefault:
          description: True if this tax rate is the default tax rate.
          type: boolean
        rate:
          description: |
            The tax rate value.

            For a fixed amount tax rate, is the fixed amount of the tax.

            For a percent tax rate, the percentage is expressed as a decimal value. For example, if the tax rate is 6.25%, then `rate` is 0.0625.

            If `type` is `NONE`, then `rate` is `null`.
          format: double
          type: number
        type:
          description: The type of the tax rate.
          enum:
            - PERCENT
            - FIXED
            - TABLE
            - NONE
            - EXTERNAL
          type: string
        roundingType:
          description: |
            The method used to round fractional currency amounts to non-fractional currency amounts.

            Only applies to `PERCENT` tax rates. For other tax rate types, `roundingType` is `null`.

            Valid values:

            * `HALF_UP` - Round values up or down to the nearest number. If the last digit is 5, which is halfway, then always round up to the nearest number.

            * `HALF_EVEN` - Round values up or down to the nearest number. If the last digit is 5, which is halfway, then round up or down to the nearest even number.

            * `ALWAYS_UP` - Always round up to the next number.

            * `ALWAYS_DOWN` - Always round down to the next number.

            For more details and examples, see <a href="https://doc.toasttab.com/doc/platformguide/adminPercentTaxRates.html#roundingOptions">Rounding options</a>.
          enum:
            - HALF_UP
            - HALF_EVEN
            - ALWAYS_UP
            - ALWAYS_DOWN
          type: string
        taxTable:
          description: An array of `TaxTableRow` objects that define a set of tax amounts that apply to specific sale amount ranges.
          items:
            $ref: '#/components/schemas/TaxTableRow'
          type: array
        conditionalTaxRates:
          description: |
            An array of `ConditionalTaxRate`
            objects that indicate the conditional rates that override
            the default `rate` for this `TaxRate` in specific
            situations. For example, a conditional rate might
            override the default rate when a `TaxRate` is applied for
            a specific dining option, such as takeout.
          items:
            $ref: '#/components/schemas/ConditionalTaxRate'
          type: array
      type: object
      example: null
    TipWithholding_allOf:
      properties:
        enabled:
          description: |
            Indicates whether a restaurant location withholds a percent of
            employees' credit card tips.

            * `true` - the location keeps a percent of employees' credit card
            tips.

            * `false` - the location does not keep a percent of employees'
            credit card tips.
          type: boolean
        percentage:
          description: |
            The decimal percentage of credit card tips withheld. If tip
            withholding is not `enabled`, tips will not be withheld in the
            Toast platform regardless of this value.
          type: number
      type: object
      example: null
    VoidReason_allOf:
      description: "When voiding something through the POS, the user must choose a preconfigured void reason."
      properties:
        name:
          description: The name of this void reason.
          type: string
      type: object
      example: null
    ExternalReference_allOf:
      description: A wrapper object with fields that allow reference to a Toast entity by Toast GUID or a partner's identifier.
      properties:
        externalId:
          description: "External identifier string, prefixed by the naming authority."
          type: string
      type: object
      example: null
x-original-swagger-version: "2.0"
